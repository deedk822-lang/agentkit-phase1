apiVersion: v1
kind: Namespace
metadata:
  name: pcp-prod
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pcp-ksa # The KSA used for Workload Identity
  namespace: pcp-prod
  annotations:
    # Replace with your GCP_PROJECT_ID
    iam.gke.io/gcp-service-account: pcp-sa@your-gcp-project-id.iam.gserviceaccount.com
---
# Redis Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: pcp-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: pcp-prod
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
# MCP Orchestrator Deployment (Upgraded for Workload Identity & Secrets CSI)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-orchestrator
  namespace: pcp-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-orchestrator
  template:
    metadata:
      labels:
        app: mcp-orchestrator
    spec:
      serviceAccountName: pcp-ksa # Use the WI-enabled KSA
      containers:
      - name: orchestrator
        # Replace with your image path
        image: gcr.io/your-project-id/mcp-orchestrator:latest
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: pcp-secrets-volume
          mountPath: "/mnt/secrets"
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: pcp-secrets-volume
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "pcp-gcp-secrets"
---
# Command Poller Deployment (Upgraded for HA, Workload Identity & Secrets CSI)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: command-poller
  namespace: pcp-prod
spec:
  replicas: 3 # Now safe for High Availability due to Redis lock
  selector:
    matchLabels:
      app: command-poller
  template:
    metadata:
      labels:
        app: command-poller
    spec:
      serviceAccountName: pcp-ksa # Use the WI-enabled KSA
      containers:
      - name: poller
        # Replace with your image path
        image: gcr.io/your-project-id/command-poller:latest
        env: # Non-secret config can still go here
        - name: REDIS_URL
          value: "redis-service:6379"
        volumeMounts:
        - name: pcp-secrets-volume
          mountPath: "/mnt/secrets"
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
      volumes:
      - name: pcp-secrets-volume
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "pcp-gcp-secrets"
---
# SecretProviderClass to link GCP Secret Manager to the CSI Driver
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: pcp-gcp-secrets
  namespace: pcp-prod
spec:
  provider: gcp
  parameters:
    secrets: |
      # Replace with your GCP_PROJECT_ID
      - resourceName: "projects/your-gcp-project-id/secrets/notion-token/versions/latest"
        fileName: "NOTION_TOKEN"
      - resourceName: "projects/your-gcp-project-id/secrets/mcp-private-key/versions/latest"
        fileName: "MCP_PRIVATE_KEY"
      - resourceName: "projects/your-gcp-project-id/secrets/groq-api-key/versions/latest"
        fileName: "GROQ_API_KEY"
      - resourceName: "projects/your-gcp-project-id/secrets/mistral-api-key/versions/latest"
        fileName: "MISTRAL_API_KEY"
      - resourceName: "projects/your-gcp-project-id/secrets/google-doc-id/versions/latest"
        fileName: "GOOGLE_DOC_ID"

